// Generated by CoffeeScript 1.4.0
var Ant, child_process, children, colors, input, keypress, prompt;

child_process = require('child_process');

colors = require('colors');

children = require('./children');

keypress = require('keypress');

keypress(process.stdin);

prompt = '  task : '.bold.white;

input = '';

module.exports = Ant = (function() {

  function Ant() {}

  Ant.writeLine = function(context, line) {
    process.stdout.clearLine();
    process.stdout.cursorTo(0);
    console.log(context + line);
    return process.stdout.write(prompt + input);
  };

  Ant.processStream = function(chunk) {
    var buffer, line, _i, _len, _ref, _results;
    buffer = new Buffer(chunk);
    _ref = buffer.toString().split('\n');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      line = _ref[_i];
      if (line.match(/BUILD FAILED/)) {
        _results.push(Ant.writeLine('   ant '.grey, ': '.bold.white + line.bold.red));
      } else if (line.match(/BUILD SUCCESSFUL/)) {
        _results.push(Ant.writeLine('   ant '.grey, ': '.bold.white + line.bold.green));
      } else {
        _results.push(Ant.writeLine('   ant '.grey, ': '.bold.white + line));
      }
    }
    return _results;
  };

  Ant.ant = function(task) {
    var child, options;
    options = [task];
    child = child_process.spawn('ant', options);
    child.stderr.on('data', this.processStream);
    child.stdout.on('data', this.processStream);
    console.log('');
    return '';
  };

  Ant.input = function(task) {
    if (!task) {
      console.log('');
      return '';
    }
    if (task && task.length === 0) {
      console.log('');
      return '';
    }
    return this.ant(task);
  };

  Ant.stop = function() {
    children.stop();
    return process.exit();
  };

  Ant.run = function(argv) {
    var stdin,
      _this = this;
    stdin = process.openStdin();
    process.stdin.setRawMode(true);
    process.stdout.write(prompt + input);
    return process.stdin.on('keypress', function(chunk, key) {
      if (key) {
        if (key.ctrl && key.name === 'c') {
          _this.stop();
        } else if (key.ctrl && key.name === 'd') {
          _this.stop();
        } else if (key.name === 'enter') {
          input = _this.input(input);
          process.stdout.write(prompt + input);
          return;
        } else if (key.name === 'backspace') {
          input = input.slice(0, input.length - 1);
          process.stdout.clearLine();
          process.stdout.cursorTo(0);
          process.stdout.write(prompt + input);
        }
      }
      if (!chunk) {
        return;
      }
      input += chunk.toString();
      process.stdout.clearLine();
      process.stdout.cursorTo(0);
      return process.stdout.write(prompt + input);
    });
  };

  return Ant;

}).call(this);
